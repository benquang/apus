{"version":3,"sources":["webpack:///./src/components/ui/Tabs/Tabs.tsx","webpack:///./src/components/ui/Carousel/HorizontalCarousel.tsx","webpack:///./src/components/ui/Home/HomeBanner/HomeBanner.tsx","webpack:///./node_modules/react-hook-form/dist/index.esm.js","webpack:///./src/components/ui/Forms/MauticForm/MauticForm.tsx","webpack:///./src/components/ui/Home/MoreArticles/MoreArticles.tsx","webpack:///./src/components/ui/Home/PostsPerTopic/PostsPerTopic.tsx","webpack:///./src/components/ui/Home/Topics/Topics.tsx","webpack:///./src/components/utils/PostsSelector.ts","webpack:///./src/pages/index.tsx","webpack:///./src/components/ui/AnnouncementHeader/AnnouncementHeader.tsx","webpack:///./src/components/ui/Tabs/Tab.tsx"],"names":["Tabs","props","initialState","Array","size","fill","activeTabs","setActiveTabs","useState","React","createElement","className","cn","Children","map","children","child","i","isValidElement","key","onClick","setActive","index","item","label","cloneElement","HorizontalCarousel","currents","setCurrents","current","slidesNum","actives","from","x","useEffect","nextCurrent","nextActives","activeSlides","unshift","pop","getNextActiveSlides","timer","setTimeout","clearTimeout","childrensArray","toArray","carouselLength","HomeBanner","href","Button","accent","Accent","primary","type","ButtonType","linkExternal","onClickLink","horizontalCarouselTopics","length","_toConsumableArray","sort","Math","random","topic","Link","title","to","url","dangerouslySetInnerHTML","__html","logo","isHTMLElement","value","HTMLElement","EVENTS","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","attachEventListeners","_ref","shouldAttachChangeEvent","handleChange","ref","addEventListener","isNullOrUndefined","isObjectType","isObject","isArray","Date","isKey","test","compact","filter","Boolean","stringToPath","input","replace","split","set","object","path","tempPath","lastIndex","newValue","objValue","isNaN","transformToNestObject","data","arguments","undefined","isUndefined","val","get","obj","defaultValue","result","reduce","focusOnErrorField","fields","fieldErrors","field","focus","options","removeAllEventListeners","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","getRadioValue","previous","option","checked","isRadioInput","element","isFileInput","isCheckBoxInput","isMultipleSelect","concat","defaultResult","validResult","getCheckboxValue","values","_ref4","attributes","getFieldValue","fieldsRef","name","shallowFieldsStateRef","excludeDisabled","shouldKeepRawValue","disabled","valueAsNumber","valueAsDate","setValueAs","files","_ref2","selected","_ref3","NaN","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","isEmptyObject","Object","keys","isBoolean","unset","updatePath","childObject","slice","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","fieldRef","forEach","isPrimitive","deepMerge","target","source","targetValue","sourceValue","_a","deepEqual","object1","object2","isErrorObject","keys1","keys2","val1","val2","setDirtyFields","defaultValues","dirtyFields","parentName","assign","setFieldArrayDirtyFields","isString","getFieldsValues","shallowFieldsState","search","output","startsWith","find","isErrorStateChanged","_ref5","errors","error","validFields","fieldsWithValidation","previousError","isRegex","RegExp","getValueAndMessage","validationData","message","isFunction","isMessage","getValidateError","appendErrors","validateAllFieldCriteria","types","validateField","async","_ref6","required","maxLength","minLength","min","max","pattern","validate","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueDate","valueNumber","parseFloat","maxLengthOutput","minLengthOutput","patternValue","validateRef","validateError","validationResult","validateFunction","entries","getPath","rootPath","paths","property","rootName","push","assignWatchFields","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","skipValidation","_ref7","isOnBlur","isOnChange","isOnTouch","isTouched","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","getFieldArrayParentName","substring","indexOf","isMatchFieldArrayName","searchName","isNameInFieldArray","names","some","isSelectInput","onDomRemove","removeFieldEventListenerAndRef","observer","MutationObserver","observe","window","document","childList","subtree","isWeb","cloneObject","copy","File","includes","constructor","getTime","Set","Map","modeChecker","mode","isOnSubmit","isRadioOrCheckboxFunction","isWindowUndefined","isProxyEnabled","Proxy","FormContext","displayName","MauticForm","formId","formName","isDark","buttonText","isSuccessfullySubmitted","setIsSuccessfullySubmitted","register","handleSubmit","reValidateMode","resolver","context","shouldFocusError","criteriaMode","fieldArrayDefaultValuesRef","fieldArrayValuesRef","watchFieldsRef","useWatchFieldsRef","useWatchRenderFunctionsRef","fieldsWithValidationRef","validFieldsRef","defaultValuesRef","isUnMount","isWatchAllRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","modeRef","isValidateAllFieldCriteria","formState","setFormState","isDirty","isValidating","submitCount","touched","isSubmitting","isSubmitSuccessful","readFormStateRef","formStateRef","observerRef","updateFormState","state","updateIsValidating","shouldRenderBaseOnError","shouldRender","shouldReRender","setFieldValue","rawValue","_ref8","radioRef","selectRef","_ref9","checkboxRef","isFormDirty","formValues","getValues","updateAndGetDirtyState","isFieldDirty","isDirtyFieldExist","previousIsDirty","isChanged","executeValidation","skipReRender","executeSchemaOrResolverValidation","previousFormIsValid","isInputsValid","every","trigger","Promise","setInternalValues","_ref10","shouldDirty","shouldValidate","setInternalValue","config","has","isFieldWatched","match","renderWatchedInputs","found","setValue","setFieldArrayDefaultValues","payload","_ref11","shouldSkipValidation","parentNodeName","currentError","validateResolver","newDefaultValues","removeFieldEventListener","updateWatchedValue","watchField","clearErrors","inputName","setError","shouldFocus","watchInternal","fieldNames","watchId","combinedDefaultValues","watch","unregister","registerFieldRef","fieldRefAndValidationOptions","isFieldArray","compareRef","currentRef","isEmptyDefaultValue","isEmptyUnmountFields","then","refOrRegisterOptions","onValid","onInvalid","e","preventDefault","persist","fieldError","resetRefs","_ref12","reset","omitResetState","inputRef","closest","resetFieldArray","disconnect","commonProps","prop","control","useForm","id","autoComplete","role","method","mauticform","honey","formData","FormData","newKey","append","buildFormData","fetch","cache","body","console","log","data-mautic-form","data-mautic-form-page","tabIndex","data-validate","data-validation-type","placeholder","email","MoreArticles","posts","showMore","setShowMore","list","setList","setIndex","groupsNum","ceil","Fragment","groupIndex","Group","renderGroup","postsList","groupSize","renderedItems","j","post","PostCard","suburl","secondary","custom","onClickFunction","loadMore","newIndex","newShowMore","newList","PostsPerTopic","postsPerTopic","postsPerTopicBlock","Tab","p","Topics","floor","topics","Card","direction","Direction","vertical","aos","desc","PostsSelector","allPostsUrls","this","allPosts","buildPostsMap","_proto","prototype","getByTopic","postsUrlsPerTopic","postsUrlsPerTopicFlattened","acc","_objectSpread","getByCategory","postsUrlsPerCategory","postsUrlsPerCategoryFlattened","postsPerCategory","sortByDate","postsToFilter","postsMap","frontmatter","Home","postsSelector","allMdx","nodes","useAnimationOnScroll","PageLayout","Seo","isPost","AnnouncementHeader","topicsYaml","PageSection","Container","homeYaml","about_section","block","Block","icon","tabs_posts","Divider","horizontal","node"],"mappings":"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","file":"component---src-pages-index-tsx-8e5309c299280dfc8340.js","sourcesContent":["import cn from 'classnames';\nimport React, { useState } from 'react';\nimport './Tabs.scss';\n\ninterface TabsProps {\n    children: React.ReactNode;\n    size: number;\n    className?: string;\n}\n\nconst Tabs: React.FC<TabsProps> = (props: TabsProps) => {\n    const initialState = Array(props.size).fill('');\n    initialState[0] = '--active';\n    const [activeTabs, setActiveTabs] = useState(initialState);\n\n    const setActive = (index: number) => {\n        setActiveTabs(\n            activeTabs.map((item, i) => {\n                if (i == index) {\n                    return item === '' ? '--active' : '';\n                } else {\n                    return '';\n                }\n            })\n        );\n    };\n\n    return (\n        <div className={cn('tabs', props.className)}>\n            <div className=\"tabs__headers\">\n                {React.Children.map(props.children, (child, i) =>\n                    React.isValidElement(child) ? (\n                        <div\n                            className={`tabs__headers__item${activeTabs[i]}`}\n                            key={i}\n                            onClick={() => setActive(i)}\n                        >\n                            <h5> {child.props.label}</h5>\n                        </div>\n                    ) : (\n                        ''\n                    )\n                )}\n            </div>\n            <div className=\"tabs__content\">\n                {React.Children.map(props.children, (child, i) =>\n                    React.isValidElement(child)\n                        ? React.cloneElement(child, {\n                              className: `tabs__content__item${activeTabs[i]}`\n                          })\n                        : child\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Tabs;\n","import cn from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport './HorizontalCarousel.scss';\n\n//\ninterface HorizontalCarouselProps {\n    children?: React.ReactNode;\n    slidesNum: number;\n}\n\nconst getNextActiveSlides = (\n    activeSlides: number[],\n    current: number\n): number[] => {\n    activeSlides.unshift(current);\n    activeSlides.pop();\n    return activeSlides;\n};\n\nconst carouselLength = 3;\n\nconst getAnimationClassName = (index: number): string => {\n    if (index == 0) {\n        return 'horizontal-carousel__slide--first';\n    } else if (index == carouselLength - 1) {\n        return 'horizontal-carousel__slide--last';\n    } else {\n        return '';\n    }\n};\n\nconst HorizontalCarousel: React.FC<HorizontalCarouselProps> = (\n    props: HorizontalCarouselProps\n) => {\n    const [currents, setCurrents] = useState({\n        current: props.slidesNum - carouselLength,\n        actives: Array.from(new Array(carouselLength), (x, i) => i + props.slidesNum - carouselLength)\n    });\n    const slideTime = 2000;\n\n    useEffect(() => {\n        const nextCurrent =\n            (currents.current - 1 + props.slidesNum) % props.slidesNum;\n        const nextActives = getNextActiveSlides(currents.actives, nextCurrent);\n        const timer = setTimeout(\n            () => setCurrents({ current: nextCurrent, actives: nextActives }),\n            slideTime\n        );\n        return () => clearTimeout(timer);\n    }, [currents]);\n\n    const childrensArray = React.Children.toArray(props.children);\n\n    return (\n        <div className=\"horizontal-carousel\">\n            {currents.actives.map((x, i) => {\n                const child = childrensArray[x];\n                return (\n                    <div key={i} className={cn('horizontal-carousel__slide')}>\n                        {React.isValidElement(child)\n                            ? React.cloneElement(child, {\n                                  className: cn(\n                                      child.props.className,\n                                      getAnimationClassName(i) //to add animation in the child\n                                  )\n                              })\n                            : child}\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default HorizontalCarousel;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport { Accent, ButtonType } from '../../../../globals';\nimport Button from '../../Button/Button';\nimport HorizontalCarousel from '../../Carousel/HorizontalCarousel';\nimport './HomeBanner.scss';\n\ninterface HomeBannerProps {\n    // carouselPosts: Record<string, Frontmatter>;\n    horizontalCarouselTopics: TopicDetails[];\n}\n\nconst HomeBanner: React.FC<HomeBannerProps> = (props: HomeBannerProps) => {\n    return (\n        <div className=\"home-banner\">\n            <div className=\"home-banner__content\">\n                <div className=\"home-banner__content__details\">\n                    <h1> APUS Venture</h1>\n\n                    <p>\n                    All you need can be found on {' '}\n                        <a href=\"https://apusventure.com/\">apusventure.com</a>\n                    </p>\n\n                    <Button\n                        accent={Accent.primary}\n                        type={ButtonType.linkExternal}\n                        onClickLink=\"https://theaisummer.com\"\n                        className=\"home-banner__content__details__cta\"\n                    >\n                        See APUS Venture\n                    </Button>\n                </div>\n                <div className=\"home-banner__content__image\">\n                    <HorizontalCarousel\n                        slidesNum={props.horizontalCarouselTopics.length}\n                    >\n                        {[...props.horizontalCarouselTopics]\n                            .sort()\n                            .sort(() => Math.random() - 0.5)\n                            .map((topic, i) => (\n                                <Link\n                                    key={topic.title}\n                                    className=\"carousel-topic\"\n                                    to={`/topics/${topic.url}`}\n                                >\n                                    <div className=\"carousel-topic__logo-wrapper\">\n                                        <span\n                                            dangerouslySetInnerHTML={{\n                                                __html: topic.logo || ''\n                                            }}\n                                        ></span>\n                                    </div>\n                                    <div className=\"carousel-topic__title\">\n                                        <h4>{topic.title}</h4>\n                                    </div>\n                                </Link>\n                            ))}\n                    </HorizontalCarousel>\n                </div>\n            </div>\n            <div className=\"home-banner__background-wave\"></div>\n        </div>\n    );\n};\n\nexport default HomeBanner;\n","import { isValidElement, useRef, useState, useCallback, useEffect, useMemo, createContext, useContext, createElement, cloneElement } from 'react';\nvar isHTMLElement = value => value instanceof HTMLElement;\nconst EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input'\n};\nconst VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all'\n};\nconst SELECT = 'select';\nconst UNDEFINED = 'undefined';\nconst INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\nfunction attachEventListeners(_ref, shouldAttachChangeEvent, handleChange) {\n  let {\n    ref\n  } = _ref;\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\nvar isNullOrUndefined = value => value == null;\nconst isObjectType = value => typeof value === 'object';\nvar isObject = value => !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !(value instanceof Date);\nvar isKey = value => /^\\w*$/.test(value);\nvar compact = value => value.filter(Boolean);\nvar stringToPath = input => compact(input.replace(/[\"|']/g, '').replace(/\\[/g, '.').replace(/\\]/g, '').split('.'));\nfunction set(object, path, value) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : !isNaN(+tempPath[index + 1]) ? [] : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\nvar transformToNestObject = function (data) {\n  let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  for (const key in data) {\n    !isKey(key) ? set(value, key, data[key]) : value[key] = data[key];\n  }\n  return value;\n};\nvar isUndefined = val => val === undefined;\nvar get = function () {\n  let obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let path = arguments.length > 1 ? arguments[1] : undefined;\n  let defaultValue = arguments.length > 2 ? arguments[2] : undefined;\n  const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\n  return isUndefined(result) || result === obj ? isUndefined(obj[path]) ? defaultValue : obj[path] : result;\n};\nvar focusOnErrorField = (fields, fieldErrors) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n      if (field) {\n        if (field.ref.focus && isUndefined(field.ref.focus())) {\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n          break;\n        }\n      }\n    }\n  }\n};\nvar removeAllEventListeners = (ref, validateWithStateUpdate) => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\nconst defaultReturn = {\n  isValid: false,\n  value: null\n};\nvar getRadioValue = options => Array.isArray(options) ? options.reduce((previous, option) => option && option.ref.checked ? {\n  isValid: true,\n  value: option.ref.value\n} : previous, defaultReturn) : defaultReturn;\nvar getMultipleSelectValue = options => [...options].filter(_ref2 => {\n  let {\n    selected\n  } = _ref2;\n  return selected;\n}).map(_ref3 => {\n  let {\n    value\n  } = _ref3;\n  return value;\n});\nvar isRadioInput = element => element.type === 'radio';\nvar isFileInput = element => element.type === 'file';\nvar isCheckBoxInput = element => element.type === 'checkbox';\nvar isMultipleSelect = element => element.type === \"\".concat(SELECT, \"-multiple\");\nconst defaultResult = {\n  value: false,\n  isValid: false\n};\nconst validResult = {\n  value: true,\n  isValid: true\n};\nvar getCheckboxValue = options => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options.filter(option => option && option.ref.checked).map(_ref4 => {\n        let {\n          ref: {\n            value\n          }\n        } = _ref4;\n        return value;\n      });\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n    const {\n      checked,\n      value,\n      attributes\n    } = options[0].ref;\n    return checked ? attributes && !isUndefined(attributes.value) ? isUndefined(value) || value === '' ? validResult : {\n      value: value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n  return defaultResult;\n};\nfunction getFieldValue(fieldsRef, name, shallowFieldsStateRef, excludeDisabled, shouldKeepRawValue) {\n  const field = fieldsRef.current[name];\n  if (field) {\n    const {\n      ref: {\n        value,\n        disabled\n      },\n      ref,\n      valueAsNumber,\n      valueAsDate,\n      setValueAs\n    } = field;\n    if (disabled && excludeDisabled) {\n      return;\n    }\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n    if (isCheckBoxInput(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n    return shouldKeepRawValue ? value : valueAsNumber ? value === '' ? NaN : +value : valueAsDate ? ref.valueAsDate : setValueAs ? setValueAs(value) : value;\n  }\n  if (shallowFieldsStateRef) {\n    return get(shallowFieldsStateRef.current, name);\n  }\n}\nfunction isDetached(element) {\n  if (!element) {\n    return true;\n  }\n  if (!(element instanceof HTMLElement) || element.nodeType === Node.DOCUMENT_NODE) {\n    return false;\n  }\n  return isDetached(element.parentNode);\n}\nvar isEmptyObject = value => isObject(value) && !Object.keys(value).length;\nvar isBoolean = value => typeof value === 'boolean';\nfunction baseGet(object, updatePath) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n  return object;\n}\nfunction unset(object, path) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n  if (childObject) {\n    delete childObject[key];\n  }\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n    if (k > 0) {\n      previousObjRef = object;\n    }\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n      if (currentPathsLength === index && (isObject(objectRef) && isEmptyObject(objectRef) || Array.isArray(objectRef) && !objectRef.filter(data => isObject(data) && !isEmptyObject(data) || isBoolean(data)).length)) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n      previousObjRef = objectRef;\n    }\n  }\n  return object;\n}\nconst isSameRef = (fieldValue, ref) => fieldValue && fieldValue.ref === ref;\nfunction findRemovedFieldAndRemoveListener(fieldsRef, handleChange, field, shallowFieldsStateRef, shouldUnregister, forceDelete) {\n  const {\n    ref,\n    ref: {\n      name\n    }\n  } = field;\n  const fieldRef = fieldsRef.current[name];\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, shallowFieldsStateRef);\n    !isUndefined(value) && set(shallowFieldsStateRef.current, name, value);\n  }\n  if (!ref.type || !fieldRef) {\n    delete fieldsRef.current[name];\n    return;\n  }\n  if (isRadioInput(ref) || isCheckBoxInput(ref)) {\n    if (Array.isArray(fieldRef.options) && fieldRef.options.length) {\n      compact(fieldRef.options).forEach(function () {\n        let option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let index = arguments.length > 1 ? arguments[1] : undefined;\n        if (isDetached(option.ref) && isSameRef(option, option.ref) || forceDelete) {\n          removeAllEventListeners(option.ref, handleChange);\n          unset(fieldRef.options, \"[\".concat(index, \"]\"));\n        }\n      });\n      if (fieldRef.options && !compact(fieldRef.options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if (isDetached(ref) && isSameRef(fieldRef, ref) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n    delete fieldsRef.current[name];\n  }\n}\nvar isPrimitive = value => isNullOrUndefined(value) || !isObjectType(value);\nfunction deepMerge(target, source) {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n    try {\n      target[key] = isObject(targetValue) && isObject(sourceValue) || Array.isArray(targetValue) && Array.isArray(sourceValue) ? deepMerge(targetValue, sourceValue) : sourceValue;\n    } catch (_a) {}\n  }\n  return target;\n}\nfunction deepEqual(object1, object2, isErrorObject) {\n  if (isPrimitive(object1) || isPrimitive(object2) || object1 instanceof Date || object2 instanceof Date) {\n    return object1 === object2;\n  }\n  if (!isValidElement(object1)) {\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      const val1 = object1[key];\n      if (!(isErrorObject && key === 'ref')) {\n        const val2 = object2[key];\n        if ((isObject(val1) || Array.isArray(val1)) && (isObject(val2) || Array.isArray(val2)) ? !deepEqual(val1, val2, isErrorObject) : val1 !== val2) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\n  let index = -1;\n  while (++index < values.length) {\n    for (const key in values[index]) {\n      if (Array.isArray(values[index][key])) {\n        !dirtyFields[index] && (dirtyFields[index] = {});\n        dirtyFields[index][key] = [];\n        setDirtyFields(values[index][key], get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\n      } else {\n        deepEqual(get(defaultValues[index] || {}, key), values[index][key]) ? set(dirtyFields[index] || {}, key) : dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), {\n          [key]: true\n        });\n      }\n    }\n    parentNode && !dirtyFields.length && delete parentNode[parentName];\n  }\n  return dirtyFields;\n}\nvar setFieldArrayDirtyFields = (values, defaultValues, dirtyFields) => deepMerge(setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)), setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)));\nvar isString = value => typeof value === 'string';\nvar getFieldsValues = (fieldsRef, shallowFieldsState, shouldUnregister, excludeDisabled, search) => {\n  const output = {};\n  for (const name in fieldsRef.current) {\n    if (isUndefined(search) || (isString(search) ? name.startsWith(search) : Array.isArray(search) && search.find(data => name.startsWith(data)))) {\n      output[name] = getFieldValue(fieldsRef, name, undefined, excludeDisabled);\n    }\n  }\n  return shouldUnregister ? transformToNestObject(output) : deepMerge(shallowFieldsState, transformToNestObject(output));\n};\nvar isErrorStateChanged = _ref5 => {\n  let {\n    errors,\n    name,\n    error,\n    validFields,\n    fieldsWithValidation\n  } = _ref5;\n  const isValid = isUndefined(error);\n  const previousError = get(errors, name);\n  return isValid && !!previousError || !isValid && !deepEqual(previousError, error, true) || isValid && get(fieldsWithValidation, name) && !get(validFields, name);\n};\nvar isRegex = value => value instanceof RegExp;\nvar getValueAndMessage = validationData => isObject(validationData) && !isRegex(validationData) ? validationData : {\n  value: validationData,\n  message: ''\n};\nvar isFunction = value => typeof value === 'function';\nvar isMessage = value => isString(value) || isValidElement(value);\nfunction getValidateError(result, ref) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n  if (isMessage(result) || isBoolean(result) && !result) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref\n    };\n  }\n}\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria ? Object.assign(Object.assign({}, errors[name]), {\n  types: Object.assign(Object.assign({}, errors[name] && errors[name].types ? errors[name].types : {}), {\n    [type]: message || true\n  })\n}) : {};\nvar validateField = async (fieldsRef, validateAllFieldCriteria, _ref6, shallowFieldsStateRef) => {\n  let {\n    ref,\n    ref: {\n      value\n    },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate\n  } = _ref6;\n  const name = ref.name;\n  const error = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n  const getMinMaxMessage = function (exceedMax, maxLengthMessage, minLengthMessage) {\n    let maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n    let minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = Object.assign({\n      type: exceedMax ? maxType : minType,\n      message,\n      ref\n    }, exceedMax ? appendErrorsCurry(maxType, message) : appendErrorsCurry(minType, message));\n  };\n  if (required && (!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value)) || isBoolean(value) && !value || isCheckBox && !getCheckboxValue(options).isValid || isRadio && !getRadioValue(options).isValid)) {\n    const {\n      value,\n      message\n    } = isMessage(required) ? {\n      value: !!required,\n      message: required\n    } : getValueAndMessage(required);\n    if (value) {\n      error[name] = Object.assign({\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: isRadioOrCheckbox ? ((fieldsRef.current[name].options || [])[0] || {}).ref : ref\n      }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n  if ((!isNullOrUndefined(min) || !isNullOrUndefined(max)) && value !== '') {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n    if (!isNaN(value)) {\n      const valueNumber = ref.valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate = ref.valueAsDate || new Date(value);\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax = !isNullOrUndefined(maxLengthOutput.value) && value.length > maxLengthOutput.value;\n    const exceedMin = !isNullOrUndefined(minLengthOutput.value) && value.length < minLengthOutput.value;\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n  if (isString(value) && pattern && !isEmpty) {\n    const {\n      value: patternValue,\n      message\n    } = getValueAndMessage(pattern);\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = Object.assign({\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref\n      }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message));\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n  if (validate) {\n    const fieldValue = getFieldValue(fieldsRef, name, shallowFieldsStateRef, false, true);\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n      if (validateError) {\n        error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {};\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(validateResult, validateRef, key);\n        if (validateError) {\n          validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n      if (!isEmptyObject(validationResult)) {\n        error[name] = Object.assign({\n          ref: validateRef\n        }, validationResult);\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n  return error;\n};\nconst getPath = function (rootPath, values) {\n  let paths = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  for (const property in values) {\n    const rootName = rootPath + (isObject(values) ? \".\".concat(property) : \"[\".concat(property, \"]\"));\n    isPrimitive(values[property]) ? paths.push(rootName) : getPath(rootName, values[property], paths);\n  }\n  return paths;\n};\nvar assignWatchFields = (fieldValues, fieldName, watchFields, inputValue, isSingleField) => {\n  let value = undefined;\n  watchFields.add(fieldName);\n  if (!isEmptyObject(fieldValues)) {\n    value = get(fieldValues, fieldName);\n    if (isObject(value) || Array.isArray(value)) {\n      getPath(fieldName, value).forEach(name => watchFields.add(name));\n    }\n  }\n  return isUndefined(value) ? isSingleField ? inputValue : get(inputValue, fieldName) : value;\n};\nvar skipValidation = _ref7 => {\n  let {\n    isOnBlur,\n    isOnChange,\n    isOnTouch,\n    isTouched,\n    isReValidateOnBlur,\n    isReValidateOnChange,\n    isBlurEvent,\n    isSubmitted,\n    isOnAll\n  } = _ref7;\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\nvar getFieldArrayParentName = name => name.substring(0, name.indexOf('['));\nconst isMatchFieldArrayName = (name, searchName) => RegExp(\"^\".concat(searchName, \"([|.)\\\\d+\").replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]')).test(name);\nvar isNameInFieldArray = (names, name) => [...names].some(current => isMatchFieldArrayName(name, current));\nvar isSelectInput = element => element.type === \"\".concat(SELECT, \"-one\");\nfunction onDomRemove(fieldsRef, removeFieldEventListenerAndRef) {\n  const observer = new MutationObserver(() => {\n    for (const field of Object.values(fieldsRef.current)) {\n      if (field && field.options) {\n        for (const option of field.options) {\n          if (option && option.ref && isDetached(option.ref)) {\n            removeFieldEventListenerAndRef(field);\n          }\n        }\n      } else if (field && isDetached(field.ref)) {\n        removeFieldEventListenerAndRef(field);\n      }\n    }\n  });\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar isWeb = typeof window !== UNDEFINED && typeof document !== UNDEFINED;\nfunction cloneObject(data) {\n  var _a;\n  let copy;\n  if (isPrimitive(data) || isWeb && (data instanceof File || isHTMLElement(data))) {\n    return data;\n  }\n  if (!['Set', 'Map', 'Object', 'Date', 'Array'].includes((_a = data.constructor) === null || _a === void 0 ? void 0 : _a.name)) {\n    return data;\n  }\n  if (data instanceof Date) {\n    copy = new Date(data.getTime());\n    return copy;\n  }\n  if (data instanceof Set) {\n    copy = new Set();\n    for (const item of data) {\n      copy.add(item);\n    }\n    return copy;\n  }\n  if (data instanceof Map) {\n    copy = new Map();\n    for (const key of data.keys()) {\n      copy.set(key, cloneObject(data.get(key)));\n    }\n    return copy;\n  }\n  copy = Array.isArray(data) ? [] : {};\n  for (const key in data) {\n    copy[key] = cloneObject(data[key]);\n  }\n  return copy;\n}\nvar modeChecker = mode => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched\n});\nvar isRadioOrCheckboxFunction = ref => isRadioInput(ref) || isCheckBoxInput(ref);\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\nfunction useForm() {\n  let {\n    mode = VALIDATION_MODE.onSubmit,\n    reValidateMode = VALIDATION_MODE.onChange,\n    resolver,\n    context,\n    defaultValues = {},\n    shouldFocusError = true,\n    shouldUnregister = true,\n    criteriaMode\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const fieldsRef = useRef({});\n  const fieldArrayDefaultValuesRef = useRef({});\n  const fieldArrayValuesRef = useRef({});\n  const watchFieldsRef = useRef(new Set());\n  const useWatchFieldsRef = useRef({});\n  const useWatchRenderFunctionsRef = useRef({});\n  const fieldsWithValidationRef = useRef({});\n  const validFieldsRef = useRef({});\n  const defaultValuesRef = useRef(defaultValues);\n  const isUnMount = useRef(false);\n  const isWatchAllRef = useRef(false);\n  const handleChangeRef = useRef();\n  const shallowFieldsStateRef = useRef({});\n  const resetFieldArrayFunctionRef = useRef({});\n  const contextRef = useRef(context);\n  const resolverRef = useRef(resolver);\n  const fieldArrayNamesRef = useRef(new Set());\n  const modeRef = useRef(modeChecker(mode));\n  const {\n    isOnSubmit,\n    isOnTouch\n  } = modeRef.current;\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const [formState, setFormState] = useState({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touched: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: !isOnSubmit,\n    errors: {}\n  });\n  const readFormStateRef = useRef({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    touched: !isProxyEnabled || isOnTouch,\n    isValidating: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled\n  });\n  const formStateRef = useRef(formState);\n  const observerRef = useRef();\n  const {\n    isOnBlur: isReValidateOnBlur,\n    isOnChange: isReValidateOnChange\n  } = useRef(modeChecker(reValidateMode)).current;\n  contextRef.current = context;\n  resolverRef.current = resolver;\n  formStateRef.current = formState;\n  shallowFieldsStateRef.current = shouldUnregister ? {} : isEmptyObject(shallowFieldsStateRef.current) ? cloneObject(defaultValues) : shallowFieldsStateRef.current;\n  const updateFormState = useCallback(function () {\n    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!isUnMount.current) {\n      formStateRef.current = Object.assign(Object.assign({}, formStateRef.current), state);\n      setFormState(formStateRef.current);\n    }\n  }, []);\n  const updateIsValidating = () => readFormStateRef.current.isValidating && updateFormState({\n    isValidating: true\n  });\n  const shouldRenderBaseOnError = useCallback(function (name, error) {\n    let shouldRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let isValid = arguments.length > 4 ? arguments[4] : undefined;\n    let shouldReRender = shouldRender || isErrorStateChanged({\n      errors: formStateRef.current.errors,\n      error,\n      name,\n      validFields: validFieldsRef.current,\n      fieldsWithValidation: fieldsWithValidationRef.current\n    });\n    const previousError = get(formStateRef.current.errors, name);\n    if (error) {\n      unset(validFieldsRef.current, name);\n      shouldReRender = shouldReRender || !previousError || !deepEqual(previousError, error, true);\n      set(formStateRef.current.errors, name, error);\n    } else {\n      if (get(fieldsWithValidationRef.current, name) || resolverRef.current) {\n        set(validFieldsRef.current, name, true);\n        shouldReRender = shouldReRender || previousError;\n      }\n      unset(formStateRef.current.errors, name);\n    }\n    if (shouldReRender && !isNullOrUndefined(shouldRender) || !isEmptyObject(state) || readFormStateRef.current.isValidating) {\n      updateFormState(Object.assign(Object.assign(Object.assign({}, state), resolverRef.current ? {\n        isValid: !!isValid\n      } : {}), {\n        isValidating: false\n      }));\n    }\n  }, []);\n  const setFieldValue = useCallback((name, rawValue) => {\n    const {\n      ref,\n      options\n    } = fieldsRef.current[name];\n    const value = isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue) ? '' : rawValue;\n    if (isRadioInput(ref)) {\n      (options || []).forEach(_ref8 => {\n        let {\n          ref: radioRef\n        } = _ref8;\n        return radioRef.checked = radioRef.value === value;\n      });\n    } else if (isFileInput(ref) && !isString(value)) {\n      ref.files = value;\n    } else if (isMultipleSelect(ref)) {\n      [...ref.options].forEach(selectRef => selectRef.selected = value.includes(selectRef.value));\n    } else if (isCheckBoxInput(ref) && options) {\n      options.length > 1 ? options.forEach(_ref9 => {\n        let {\n          ref: checkboxRef\n        } = _ref9;\n        return checkboxRef.checked = Array.isArray(value) ? !!value.find(data => data === checkboxRef.value) : value === checkboxRef.value;\n      }) : options[0].ref.checked = !!value;\n    } else {\n      ref.value = value;\n    }\n  }, []);\n  const isFormDirty = useCallback((name, data) => {\n    if (readFormStateRef.current.isDirty) {\n      const formValues = getValues();\n      name && data && set(formValues, name, data);\n      return !deepEqual(formValues, defaultValuesRef.current);\n    }\n    return false;\n  }, []);\n  const updateAndGetDirtyState = useCallback(function (name) {\n    let shouldRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (readFormStateRef.current.isDirty || readFormStateRef.current.dirtyFields) {\n      const isFieldDirty = !deepEqual(get(defaultValuesRef.current, name), getFieldValue(fieldsRef, name, shallowFieldsStateRef));\n      const isDirtyFieldExist = get(formStateRef.current.dirtyFields, name);\n      const previousIsDirty = formStateRef.current.isDirty;\n      isFieldDirty ? set(formStateRef.current.dirtyFields, name, true) : unset(formStateRef.current.dirtyFields, name);\n      const state = {\n        isDirty: isFormDirty(),\n        dirtyFields: formStateRef.current.dirtyFields\n      };\n      const isChanged = readFormStateRef.current.isDirty && previousIsDirty !== state.isDirty || readFormStateRef.current.dirtyFields && isDirtyFieldExist !== get(formStateRef.current.dirtyFields, name);\n      isChanged && shouldRender && updateFormState(state);\n      return isChanged ? state : {};\n    }\n    return {};\n  }, []);\n  const executeValidation = useCallback(async (name, skipReRender) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!fieldsRef.current[name]) {\n        console.warn('📋 Field is missing with `name` attribute: ', name);\n        return false;\n      }\n    }\n    const error = (await validateField(fieldsRef, isValidateAllFieldCriteria, fieldsRef.current[name], shallowFieldsStateRef))[name];\n    shouldRenderBaseOnError(name, error, skipReRender);\n    return isUndefined(error);\n  }, [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\n  const executeSchemaOrResolverValidation = useCallback(async names => {\n    const {\n      errors\n    } = await resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\n    const previousFormIsValid = formStateRef.current.isValid;\n    if (Array.isArray(names)) {\n      const isInputsValid = names.map(name => {\n        const error = get(errors, name);\n        error ? set(formStateRef.current.errors, name, error) : unset(formStateRef.current.errors, name);\n        return !error;\n      }).every(Boolean);\n      updateFormState({\n        isValid: isEmptyObject(errors),\n        isValidating: false\n      });\n      return isInputsValid;\n    } else {\n      const error = get(errors, names);\n      shouldRenderBaseOnError(names, error, previousFormIsValid !== isEmptyObject(errors), {}, isEmptyObject(errors));\n      return !error;\n    }\n  }, [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\n  const trigger = useCallback(async name => {\n    const fields = name || Object.keys(fieldsRef.current);\n    updateIsValidating();\n    if (resolverRef.current) {\n      return executeSchemaOrResolverValidation(fields);\n    }\n    if (Array.isArray(fields)) {\n      !name && (formStateRef.current.errors = {});\n      const result = await Promise.all(fields.map(async data => await executeValidation(data, null)));\n      updateFormState({\n        isValidating: false\n      });\n      return result.every(Boolean);\n    }\n    return await executeValidation(fields);\n  }, [executeSchemaOrResolverValidation, executeValidation]);\n  const setInternalValues = useCallback((name, value, _ref10) => {\n    let {\n      shouldDirty,\n      shouldValidate\n    } = _ref10;\n    const data = {};\n    set(data, name, value);\n    for (const fieldName of getPath(name, value)) {\n      if (fieldsRef.current[fieldName]) {\n        setFieldValue(fieldName, get(data, fieldName));\n        shouldDirty && updateAndGetDirtyState(fieldName);\n        shouldValidate && trigger(fieldName);\n      }\n    }\n  }, [trigger, setFieldValue, updateAndGetDirtyState]);\n  const setInternalValue = useCallback((name, value, config) => {\n    !shouldUnregister && !isPrimitive(value) && set(shallowFieldsStateRef.current, name, Array.isArray(value) ? [...value] : Object.assign({}, value));\n    if (fieldsRef.current[name]) {\n      setFieldValue(name, value);\n      config.shouldDirty && updateAndGetDirtyState(name);\n      config.shouldValidate && trigger(name);\n    } else if (!isPrimitive(value)) {\n      setInternalValues(name, value, config);\n      if (fieldArrayNamesRef.current.has(name)) {\n        const parentName = getFieldArrayParentName(name) || name;\n        set(fieldArrayDefaultValuesRef.current, name, value);\n        resetFieldArrayFunctionRef.current[parentName]({\n          [parentName]: get(fieldArrayDefaultValuesRef.current, parentName)\n        });\n        if ((readFormStateRef.current.isDirty || readFormStateRef.current.dirtyFields) && config.shouldDirty) {\n          set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(value, get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\n          updateFormState({\n            isDirty: !deepEqual(Object.assign(Object.assign({}, getValues()), {\n              [name]: value\n            }), defaultValuesRef.current)\n          });\n        }\n      }\n    }\n    !shouldUnregister && set(shallowFieldsStateRef.current, name, value);\n  }, [updateAndGetDirtyState, setFieldValue, setInternalValues]);\n  const isFieldWatched = name => isWatchAllRef.current || watchFieldsRef.current.has(name) || watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n  const renderWatchedInputs = name => {\n    let found = true;\n    if (!isEmptyObject(useWatchFieldsRef.current)) {\n      for (const key in useWatchFieldsRef.current) {\n        if (!name || !useWatchFieldsRef.current[key].size || useWatchFieldsRef.current[key].has(name) || useWatchFieldsRef.current[key].has(getFieldArrayParentName(name))) {\n          useWatchRenderFunctionsRef.current[key]();\n          found = false;\n        }\n      }\n    }\n    return found;\n  };\n  function setValue(name, value, config) {\n    setInternalValue(name, value, config || {});\n    isFieldWatched(name) && updateFormState();\n    renderWatchedInputs(name);\n  }\n  handleChangeRef.current = handleChangeRef.current ? handleChangeRef.current : async _ref11 => {\n    let {\n      type,\n      target\n    } = _ref11;\n    let name = target.name;\n    const field = fieldsRef.current[name];\n    let error;\n    let isValid;\n    if (field) {\n      const isBlurEvent = type === EVENTS.BLUR;\n      const shouldSkipValidation = skipValidation(Object.assign({\n        isBlurEvent,\n        isReValidateOnChange,\n        isReValidateOnBlur,\n        isTouched: !!get(formStateRef.current.touched, name),\n        isSubmitted: formStateRef.current.isSubmitted\n      }, modeRef.current));\n      let state = updateAndGetDirtyState(name, false);\n      let shouldRender = !isEmptyObject(state) || !isBlurEvent && isFieldWatched(name);\n      if (isBlurEvent && !get(formStateRef.current.touched, name) && readFormStateRef.current.touched) {\n        set(formStateRef.current.touched, name, true);\n        state = Object.assign(Object.assign({}, state), {\n          touched: formStateRef.current.touched\n        });\n      }\n      if (!shouldUnregister && isCheckBoxInput(target)) {\n        set(shallowFieldsStateRef.current, name, getFieldValue(fieldsRef, name));\n      }\n      if (shouldSkipValidation) {\n        !isBlurEvent && renderWatchedInputs(name);\n        return (!isEmptyObject(state) || shouldRender && isEmptyObject(state)) && updateFormState(state);\n      }\n      updateIsValidating();\n      if (resolverRef.current) {\n        const {\n          errors\n        } = await resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\n        const previousFormIsValid = formStateRef.current.isValid;\n        error = get(errors, name);\n        if (isCheckBoxInput(target) && !error && resolverRef.current) {\n          const parentNodeName = getFieldArrayParentName(name);\n          const currentError = get(errors, parentNodeName, {});\n          currentError.type && currentError.message && (error = currentError);\n          if (parentNodeName && (currentError || get(formStateRef.current.errors, parentNodeName))) {\n            name = parentNodeName;\n          }\n        }\n        isValid = isEmptyObject(errors);\n        previousFormIsValid !== isValid && (shouldRender = true);\n      } else {\n        error = (await validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef))[name];\n      }\n      !isBlurEvent && renderWatchedInputs(name);\n      shouldRenderBaseOnError(name, error, shouldRender, state, isValid);\n    }\n  };\n  function setFieldArrayDefaultValues(data) {\n    if (!shouldUnregister) {\n      let copy = cloneObject(data);\n      for (const value of fieldArrayNamesRef.current) {\n        if (isKey(value) && !copy[value]) {\n          copy = Object.assign(Object.assign({}, copy), {\n            [value]: []\n          });\n        }\n      }\n      return copy;\n    }\n    return data;\n  }\n  function getValues(payload) {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, shallowFieldsStateRef);\n    }\n    if (Array.isArray(payload)) {\n      const data = {};\n      for (const name of payload) {\n        set(data, name, getFieldValue(fieldsRef, name, shallowFieldsStateRef));\n      }\n      return data;\n    }\n    return setFieldArrayDefaultValues(getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister));\n  }\n  const validateResolver = useCallback(async function () {\n    let values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const newDefaultValues = isEmptyObject(fieldsRef.current) ? defaultValuesRef.current : {};\n    const {\n      errors\n    } = (await resolverRef.current(Object.assign(Object.assign(Object.assign({}, newDefaultValues), getValues()), values), contextRef.current, isValidateAllFieldCriteria)) || {};\n    const isValid = isEmptyObject(errors);\n    formStateRef.current.isValid !== isValid && updateFormState({\n      isValid\n    });\n  }, [isValidateAllFieldCriteria]);\n  const removeFieldEventListener = useCallback((field, forceDelete) => {\n    findRemovedFieldAndRemoveListener(fieldsRef, handleChangeRef.current, field, shallowFieldsStateRef, shouldUnregister, forceDelete);\n    if (shouldUnregister) {\n      unset(validFieldsRef.current, field.ref.name);\n      unset(fieldsWithValidationRef.current, field.ref.name);\n    }\n  }, [shouldUnregister]);\n  const updateWatchedValue = useCallback(name => {\n    if (isWatchAllRef.current) {\n      updateFormState();\n    } else {\n      for (const watchField of watchFieldsRef.current) {\n        if (watchField.startsWith(name)) {\n          updateFormState();\n          break;\n        }\n      }\n      renderWatchedInputs(name);\n    }\n  }, []);\n  const removeFieldEventListenerAndRef = useCallback((field, forceDelete) => {\n    if (field) {\n      removeFieldEventListener(field, forceDelete);\n      if (shouldUnregister && !compact(field.options || []).length) {\n        unset(formStateRef.current.errors, field.ref.name);\n        set(formStateRef.current.dirtyFields, field.ref.name, true);\n        updateFormState({\n          isDirty: isFormDirty()\n        });\n        readFormStateRef.current.isValid && resolverRef.current && validateResolver();\n        updateWatchedValue(field.ref.name);\n      }\n    }\n  }, [validateResolver, removeFieldEventListener]);\n  function clearErrors(name) {\n    name && (Array.isArray(name) ? name : [name]).forEach(inputName => fieldsRef.current[inputName] && isKey(inputName) ? delete formStateRef.current.errors[inputName] : unset(formStateRef.current.errors, inputName));\n    updateFormState({\n      errors: name ? formStateRef.current.errors : {}\n    });\n  }\n  function setError(name, error) {\n    const ref = (fieldsRef.current[name] || {}).ref;\n    set(formStateRef.current.errors, name, Object.assign(Object.assign({}, error), {\n      ref\n    }));\n    updateFormState({\n      isValid: false\n    });\n    error.shouldFocus && ref && ref.focus && ref.focus();\n  }\n  const watchInternal = useCallback((fieldNames, defaultValue, watchId) => {\n    const watchFields = watchId ? useWatchFieldsRef.current[watchId] : watchFieldsRef.current;\n    let fieldValues = getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister, false, fieldNames);\n    if (isString(fieldNames)) {\n      const parentNodeName = getFieldArrayParentName(fieldNames) || fieldNames;\n      if (fieldArrayNamesRef.current.has(parentNodeName)) {\n        fieldValues = Object.assign(Object.assign({}, fieldArrayValuesRef.current), fieldValues);\n      }\n      return assignWatchFields(fieldValues, fieldNames, watchFields, isUndefined(get(defaultValuesRef.current, fieldNames)) ? defaultValue : get(defaultValuesRef.current, fieldNames), true);\n    }\n    const combinedDefaultValues = isUndefined(defaultValue) ? defaultValuesRef.current : defaultValue;\n    if (Array.isArray(fieldNames)) {\n      return fieldNames.reduce((previous, name) => Object.assign(Object.assign({}, previous), {\n        [name]: assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues)\n      }), {});\n    }\n    isWatchAllRef.current = isUndefined(watchId);\n    return transformToNestObject(!isEmptyObject(fieldValues) && fieldValues || combinedDefaultValues);\n  }, []);\n  function watch(fieldNames, defaultValue) {\n    return watchInternal(fieldNames, defaultValue);\n  }\n  function unregister(name) {\n    for (const fieldName of Array.isArray(name) ? name : [name]) {\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true);\n    }\n  }\n  function registerFieldRef(ref) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ref.name) {\n        return console.warn('📋 Field is missing `name` attribute', ref, \"https://react-hook-form.com/api#useForm\");\n      }\n      if (fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) && !RegExp(\"^\".concat(ref.name.split(/\\[\\d+\\]$/)[0], \"[\\\\d+].\\\\w+\").replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]')).test(ref.name)) {\n        return console.warn('📋 `name` prop should be in object shape: name=\"test[index].name\"', ref, 'https://react-hook-form.com/api#useFieldArray');\n      }\n    }\n    const {\n      name,\n      type,\n      value\n    } = ref;\n    const fieldRefAndValidationOptions = Object.assign({\n      ref\n    }, options);\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n    const compareRef = currentRef => isWeb && (!isHTMLElement(ref) || currentRef === ref);\n    let field = fields[name];\n    let isEmptyDefaultValue = true;\n    let defaultValue;\n    if (field && (isRadioOrCheckbox ? Array.isArray(field.options) && compact(field.options).find(option => {\n      return value === option.ref.value && compareRef(option.ref);\n    }) : compareRef(field.ref))) {\n      fields[name] = Object.assign(Object.assign({}, field), options);\n      return;\n    }\n    if (type) {\n      field = isRadioOrCheckbox ? Object.assign({\n        options: [...compact(field && field.options || []), {\n          ref\n        }],\n        ref: {\n          type,\n          name\n        }\n      }, options) : Object.assign({}, fieldRefAndValidationOptions);\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n    fields[name] = field;\n    const isEmptyUnmountFields = isUndefined(get(shallowFieldsStateRef.current, name));\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(isEmptyUnmountFields ? defaultValuesRef.current : shallowFieldsStateRef.current, name);\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(name, defaultValue);\n      }\n    }\n    if (!isEmptyObject(options)) {\n      set(fieldsWithValidationRef.current, name, true);\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef).then(error => {\n          const previousFormIsValid = formStateRef.current.isValid;\n          isEmptyObject(error) ? set(validFieldsRef.current, name, true) : unset(validFieldsRef.current, name);\n          previousFormIsValid !== isEmptyObject(error) && updateFormState();\n        });\n      }\n    }\n    if (shouldUnregister && !(isFieldArray && isEmptyDefaultValue)) {\n      !isFieldArray && unset(formStateRef.current.dirtyFields, name);\n    }\n    if (type) {\n      attachEventListeners(isRadioOrCheckbox && field.options ? field.options[field.options.length - 1] : field, isRadioOrCheckbox || isSelectInput(ref), handleChangeRef.current);\n    }\n  }\n  function register(refOrRegisterOptions, options) {\n    if (!isWindowUndefined) {\n      if (isString(refOrRegisterOptions)) {\n        registerFieldRef({\n          name: refOrRegisterOptions\n        }, options);\n      } else if (isObject(refOrRegisterOptions) && 'name' in refOrRegisterOptions) {\n        registerFieldRef(refOrRegisterOptions, options);\n      } else {\n        return ref => ref && registerFieldRef(ref, refOrRegisterOptions);\n      }\n    }\n  }\n  const handleSubmit = useCallback((onValid, onInvalid) => async e => {\n    if (e && e.preventDefault) {\n      e.preventDefault();\n      e.persist();\n    }\n    let fieldErrors = {};\n    let fieldValues = setFieldArrayDefaultValues(getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister, true));\n    readFormStateRef.current.isSubmitting && updateFormState({\n      isSubmitting: true\n    });\n    try {\n      if (resolverRef.current) {\n        const {\n          errors,\n          values\n        } = await resolverRef.current(fieldValues, contextRef.current, isValidateAllFieldCriteria);\n        formStateRef.current.errors = fieldErrors = errors;\n        fieldValues = values;\n      } else {\n        for (const field of Object.values(fieldsRef.current)) {\n          if (field) {\n            const {\n              name\n            } = field.ref;\n            const fieldError = await validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef);\n            if (fieldError[name]) {\n              set(fieldErrors, name, fieldError[name]);\n              unset(validFieldsRef.current, name);\n            } else if (get(fieldsWithValidationRef.current, name)) {\n              unset(formStateRef.current.errors, name);\n              set(validFieldsRef.current, name, true);\n            }\n          }\n        }\n      }\n      if (isEmptyObject(fieldErrors) && Object.keys(formStateRef.current.errors).every(name => name in fieldsRef.current)) {\n        updateFormState({\n          errors: {},\n          isSubmitting: true\n        });\n        await onValid(fieldValues, e);\n      } else {\n        formStateRef.current.errors = Object.assign(Object.assign({}, formStateRef.current.errors), fieldErrors);\n        onInvalid && (await onInvalid(formStateRef.current.errors, e));\n        shouldFocusError && focusOnErrorField(fieldsRef.current, formStateRef.current.errors);\n      }\n    } finally {\n      formStateRef.current.isSubmitting = false;\n      updateFormState({\n        isSubmitted: true,\n        isSubmitting: false,\n        isSubmitSuccessful: isEmptyObject(formStateRef.current.errors),\n        submitCount: formStateRef.current.submitCount + 1\n      });\n    }\n  }, [shouldFocusError, isValidateAllFieldCriteria]);\n  const resetRefs = _ref12 => {\n    let {\n      errors,\n      isDirty,\n      isSubmitted,\n      touched,\n      isValid,\n      submitCount,\n      dirtyFields\n    } = _ref12;\n    if (!isValid) {\n      validFieldsRef.current = {};\n      fieldsWithValidationRef.current = {};\n    }\n    fieldArrayDefaultValuesRef.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n    updateFormState({\n      submitCount: submitCount ? formStateRef.current.submitCount : 0,\n      isDirty: isDirty ? formStateRef.current.isDirty : false,\n      isSubmitted: isSubmitted ? formStateRef.current.isSubmitted : false,\n      isValid: isValid ? formStateRef.current.isValid : false,\n      dirtyFields: dirtyFields ? formStateRef.current.dirtyFields : {},\n      touched: touched ? formStateRef.current.touched : {},\n      errors: errors ? formStateRef.current.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false\n    });\n  };\n  const reset = function (values) {\n    let omitResetState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const {\n            ref,\n            options\n          } = field;\n          const inputRef = isRadioOrCheckboxFunction(ref) && Array.isArray(options) ? options[0].ref : ref;\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form').reset();\n              break;\n            } catch (_a) {}\n          }\n        }\n      }\n    }\n    fieldsRef.current = {};\n    defaultValuesRef.current = Object.assign({}, values || defaultValuesRef.current);\n    values && renderWatchedInputs('');\n    Object.values(resetFieldArrayFunctionRef.current).forEach(resetFieldArray => isFunction(resetFieldArray) && resetFieldArray());\n    shallowFieldsStateRef.current = shouldUnregister ? {} : cloneObject(values || defaultValuesRef.current);\n    resetRefs(omitResetState);\n  };\n  useEffect(() => {\n    resolver && readFormStateRef.current.isValid && validateResolver();\n    observerRef.current = observerRef.current || !isWeb ? observerRef.current : onDomRemove(fieldsRef, removeFieldEventListenerAndRef);\n  }, [removeFieldEventListenerAndRef, defaultValuesRef.current]);\n  useEffect(() => () => {\n    observerRef.current && observerRef.current.disconnect();\n    isUnMount.current = true;\n    if (process.env.NODE_ENV !== 'production') {\n      return;\n    }\n    Object.values(fieldsRef.current).forEach(field => removeFieldEventListenerAndRef(field, true));\n  }, []);\n  if (!resolver && readFormStateRef.current.isValid) {\n    formState.isValid = deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) && isEmptyObject(formStateRef.current.errors);\n  }\n  const commonProps = {\n    trigger,\n    setValue: useCallback(setValue, [setInternalValue, trigger]),\n    getValues: useCallback(getValues, []),\n    register: useCallback(register, [defaultValuesRef.current]),\n    unregister: useCallback(unregister, []),\n    formState: isProxyEnabled ? new Proxy(formState, {\n      get: (obj, prop) => {\n        if (process.env.NODE_ENV !== 'production') {\n          if (prop === 'isValid' && isOnSubmit) {\n            console.warn('📋 `formState.isValid` is applicable with `onTouched`, `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState');\n          }\n        }\n        if (prop in obj) {\n          readFormStateRef.current[prop] = true;\n          return obj[prop];\n        }\n        return undefined;\n      }\n    }) : formState\n  };\n  const control = useMemo(() => Object.assign({\n    isFormDirty,\n    updateWatchedValue,\n    shouldUnregister,\n    updateFormState,\n    removeFieldEventListener,\n    watchInternal,\n    mode: modeRef.current,\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange\n    },\n    validateResolver: resolver ? validateResolver : undefined,\n    fieldsRef,\n    resetFieldArrayFunctionRef,\n    useWatchFieldsRef,\n    useWatchRenderFunctionsRef,\n    fieldArrayDefaultValuesRef,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayNamesRef,\n    readFormStateRef,\n    formStateRef,\n    defaultValuesRef,\n    shallowFieldsStateRef,\n    fieldArrayValuesRef\n  }, commonProps), [defaultValuesRef.current, updateWatchedValue, shouldUnregister, removeFieldEventListener, watchInternal]);\n  return Object.assign({\n    watch,\n    control,\n    handleSubmit,\n    reset: useCallback(reset, []),\n    clearErrors: useCallback(clearErrors, []),\n    setError: useCallback(setError, []),\n    errors: formState.errors\n  }, commonProps);\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nconst FormContext = createContext(null);\nFormContext.displayName = 'RHFContext';\nconst useFormContext = () => useContext(FormContext);\nconst FormProvider = _a => {\n  var {\n      children\n    } = _a,\n    props = __rest(_a, [\"children\"]);\n  return createElement(FormContext.Provider, {\n    value: Object.assign({}, props)\n  }, children);\n};\nvar generateId = () => {\n  const d = typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n};\nfunction removeAtIndexes(data, indexes) {\n  let i = 0;\n  const temp = [...data];\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n  return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index) ? [] : removeAtIndexes(data, (Array.isArray(index) ? index : [index]).sort((a, b) => a - b));\nvar moveArrayAt = (data, from, to) => {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n  return [];\n};\nvar swapArrayAt = (data, indexA, indexB) => {\n  const temp = [data[indexB], data[indexA]];\n  data[indexA] = temp[0];\n  data[indexB] = temp[1];\n};\nfunction prepend(data, value) {\n  return [...(Array.isArray(value) ? value : [value || undefined]), ...data];\n}\nfunction insert(data, index, value) {\n  return [...data.slice(0, index), ...(Array.isArray(value) ? value : [value || undefined]), ...data.slice(index)];\n}\nvar fillEmptyArray = value => Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\nvar fillBooleanArray = value => (Array.isArray(value) ? value : [value]).map(data => {\n  if (isObject(data)) {\n    const object = {};\n    for (const key in data) {\n      object[key] = true;\n    }\n    return object;\n  }\n  return true;\n});\nconst mapIds = function () {\n  let values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let keyName = arguments.length > 1 ? arguments[1] : undefined;\n  let skipWarn = arguments.length > 2 ? arguments[2] : undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!skipWarn) {\n      for (const value of values) {\n        if (typeof value === 'object') {\n          if (keyName in value) {\n            console.warn(\"\\uD83D\\uDCCB useFieldArray fieldValues contain the keyName `\".concat(keyName, \"` which is reserved for use by useFieldArray. https://react-hook-form.com/api#useFieldArray\"));\n            break;\n          }\n        } else {\n          console.warn(\"\\uD83D\\uDCCB useFieldArray input's name should be in object shape instead of flat array. https://react-hook-form.com/api#useFieldArray\");\n          break;\n        }\n      }\n    }\n  }\n  return values.map(value => Object.assign({\n    [keyName]: value[keyName] || generateId()\n  }, value));\n};\nconst useFieldArray = _ref13 => {\n  let {\n    control,\n    name,\n    keyName = 'id'\n  } = _ref13;\n  const methods = useFormContext();\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 useFieldArray is missing `control` prop. https://react-hook-form.com/api#useFieldArray');\n    }\n  }\n  const focusIndexRef = useRef(-1);\n  const isUnMount = useRef(false);\n  const {\n    isFormDirty,\n    updateWatchedValue,\n    resetFieldArrayFunctionRef,\n    fieldArrayNamesRef,\n    fieldsRef,\n    defaultValuesRef,\n    removeFieldEventListener,\n    formStateRef,\n    shallowFieldsStateRef,\n    updateFormState,\n    readFormStateRef,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayDefaultValuesRef,\n    validateResolver,\n    getValues,\n    shouldUnregister,\n    fieldArrayValuesRef\n  } = control || methods.control;\n  const getDefaultValues = values => get(shouldUnregister ? values : shallowFieldsStateRef.current, name, []);\n  const fieldArrayParentName = getFieldArrayParentName(name);\n  const memoizedDefaultValues = useRef([...(get(fieldArrayDefaultValuesRef.current, fieldArrayParentName) ? getDefaultValues(fieldArrayDefaultValuesRef.current) : getDefaultValues(defaultValuesRef.current))]);\n  const [fields, setFields] = useState(mapIds(memoizedDefaultValues.current, keyName));\n  set(fieldArrayValuesRef.current, name, compact(fields));\n  const omitKey = fields => fields.map(function () {\n    let _a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _b = keyName,\n      omitted = _a[_b],\n      rest = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n    return rest;\n  });\n  fieldArrayNamesRef.current.add(name);\n  const getFieldArrayValue = useCallback(() => get(fieldArrayValuesRef.current, name, []), [name]);\n  const getCurrentFieldsValues = () => mapIds(get(getValues(), name, getFieldArrayValue()).map((item, index) => Object.assign(Object.assign({}, getFieldArrayValue()[index]), item)), keyName, true);\n  fieldArrayNamesRef.current.add(name);\n  if (fieldArrayParentName && !get(fieldArrayDefaultValuesRef.current, fieldArrayParentName)) {\n    set(fieldArrayDefaultValuesRef.current, fieldArrayParentName, cloneObject(get(defaultValuesRef.current, fieldArrayParentName)));\n  }\n  const setFieldAndValidState = fieldsValues => {\n    setFields(fieldsValues);\n    set(fieldArrayValuesRef.current, name, fieldsValues);\n    if (readFormStateRef.current.isValid && validateResolver) {\n      const values = getValues();\n      set(values, name, fieldsValues);\n      validateResolver(values);\n    }\n  };\n  const resetFields = () => {\n    for (const key in fieldsRef.current) {\n      if (isMatchFieldArrayName(key, name)) {\n        removeFieldEventListener(fieldsRef.current[key], true);\n        delete fieldsRef.current[key];\n      }\n    }\n  };\n  const cleanup = ref => !compact(get(ref, name, [])).length && unset(ref, name);\n  const updateDirtyFieldsWithDefaultValues = updatedFieldArrayValues => {\n    if (updatedFieldArrayValues) {\n      set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues), get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\n    }\n  };\n  const batchStateUpdate = function (method, args, updatedFieldValues) {\n    let updatedFormValues = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    let shouldSet = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    let shouldUpdateValid = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    if (get(shallowFieldsStateRef.current, name)) {\n      const output = method(get(shallowFieldsStateRef.current, name), args.argA, args.argB);\n      shouldSet && set(shallowFieldsStateRef.current, name, output);\n    }\n    if (get(fieldArrayDefaultValuesRef.current, name)) {\n      const output = method(get(fieldArrayDefaultValuesRef.current, name), args.argA, args.argB);\n      shouldSet && set(fieldArrayDefaultValuesRef.current, name, output);\n    }\n    if (Array.isArray(get(formStateRef.current.errors, name))) {\n      const output = method(get(formStateRef.current.errors, name), args.argA, args.argB);\n      shouldSet && set(formStateRef.current.errors, name, output);\n      cleanup(formStateRef.current.errors);\n    }\n    if (readFormStateRef.current.touched && get(formStateRef.current.touched, name)) {\n      const output = method(get(formStateRef.current.touched, name), args.argA, args.argB);\n      shouldSet && set(formStateRef.current.touched, name, output);\n      cleanup(formStateRef.current.touched);\n    }\n    if (readFormStateRef.current.dirtyFields || readFormStateRef.current.isDirty) {\n      set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFormValues), get(defaultValuesRef.current, name, []), get(formStateRef.current.dirtyFields, name, [])));\n      updateDirtyFieldsWithDefaultValues(updatedFieldValues);\n      cleanup(formStateRef.current.dirtyFields);\n    }\n    if (shouldUpdateValid && readFormStateRef.current.isValid && !validateResolver) {\n      set(validFieldsRef.current, name, method(get(validFieldsRef.current, name, []), args.argA));\n      cleanup(validFieldsRef.current);\n      set(fieldsWithValidationRef.current, name, method(get(fieldsWithValidationRef.current, name, []), args.argA));\n      cleanup(fieldsWithValidationRef.current);\n    }\n    if (!isUnMount.current && readFormStateRef.current.isDirty) {\n      updateFormState({\n        isDirty: isFormDirty(name, omitKey(updatedFormValues))\n      });\n    }\n  };\n  const append = function (value) {\n    let shouldFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const appendValue = Array.isArray(value) ? value : [value];\n    const updateFormValues = [...getCurrentFieldsValues(), ...mapIds(appendValue, keyName)];\n    setFieldAndValidState(updateFormValues);\n    if (readFormStateRef.current.dirtyFields || readFormStateRef.current.isDirty) {\n      updateDirtyFieldsWithDefaultValues(updateFormValues);\n      updateFormState({\n        isDirty: true,\n        dirtyFields: formStateRef.current.dirtyFields\n      });\n    }\n    !shouldUnregister && set(shallowFieldsStateRef.current, name, [...(get(shallowFieldsStateRef.current, name) || []), ...cloneObject(appendValue)]);\n    focusIndexRef.current = shouldFocus ? get(fieldArrayValuesRef.current, name).length - 1 : -1;\n  };\n  const prepend$1 = function (value) {\n    let shouldFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const emptyArray = fillEmptyArray(value);\n    const updatedFieldArrayValues = prepend(getCurrentFieldsValues(), mapIds(Array.isArray(value) ? value : [value], keyName));\n    setFieldAndValidState(updatedFieldArrayValues);\n    resetFields();\n    batchStateUpdate(prepend, {\n      argA: emptyArray,\n      argC: fillBooleanArray(value)\n    }, updatedFieldArrayValues);\n    focusIndexRef.current = shouldFocus ? 0 : -1;\n  };\n  const remove = index => {\n    const fieldValues = getCurrentFieldsValues();\n    const updatedFieldValues = removeArrayAt(fieldValues, index);\n    setFieldAndValidState(updatedFieldValues);\n    resetFields();\n    batchStateUpdate(removeArrayAt, {\n      argA: index,\n      argC: index\n    }, updatedFieldValues, removeArrayAt(fieldValues, index), true, true);\n  };\n  const insert$1 = function (index, value) {\n    let shouldFocus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const emptyArray = fillEmptyArray(value);\n    const fieldValues = getCurrentFieldsValues();\n    const updatedFieldArrayValues = insert(fieldValues, index, mapIds(Array.isArray(value) ? value : [value], keyName));\n    setFieldAndValidState(updatedFieldArrayValues);\n    resetFields();\n    batchStateUpdate(insert, {\n      argA: index,\n      argB: emptyArray,\n      argC: index,\n      argD: fillBooleanArray(value)\n    }, updatedFieldArrayValues, insert(fieldValues, index));\n    focusIndexRef.current = shouldFocus ? index : -1;\n  };\n  const swap = (indexA, indexB) => {\n    const fieldValues = getCurrentFieldsValues();\n    swapArrayAt(fieldValues, indexA, indexB);\n    resetFields();\n    setFieldAndValidState([...fieldValues]);\n    batchStateUpdate(swapArrayAt, {\n      argA: indexA,\n      argB: indexB,\n      argC: indexA,\n      argD: indexB\n    }, undefined, fieldValues, false);\n  };\n  const move = (from, to) => {\n    const fieldValues = getCurrentFieldsValues();\n    moveArrayAt(fieldValues, from, to);\n    resetFields();\n    setFieldAndValidState([...fieldValues]);\n    batchStateUpdate(moveArrayAt, {\n      argA: from,\n      argB: to,\n      argC: from,\n      argD: to\n    }, undefined, fieldValues, false);\n  };\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        console.warn('📋 useFieldArray is missing `name` attribute. https://react-hook-form.com/api#useFieldArray');\n      }\n    }\n    const defaultValues = get(fieldArrayDefaultValuesRef.current, name);\n    if (defaultValues && fields.length < defaultValues.length) {\n      set(fieldArrayDefaultValuesRef.current, name, defaultValues.slice(1));\n    }\n    updateWatchedValue(name);\n    if (focusIndexRef.current > -1) {\n      for (const key in fieldsRef.current) {\n        const field = fieldsRef.current[key];\n        if (key.startsWith(\"\".concat(name, \"[\").concat(focusIndexRef.current, \"]\")) && field.ref.focus) {\n          field.ref.focus();\n          break;\n        }\n      }\n    }\n    focusIndexRef.current = -1;\n  }, [fields, name]);\n  useEffect(() => {\n    const resetFunctions = resetFieldArrayFunctionRef.current;\n    const fieldArrayNames = fieldArrayNamesRef.current;\n    if (!getFieldArrayParentName(name)) {\n      resetFunctions[name] = data => {\n        resetFields();\n        !data && unset(fieldArrayDefaultValuesRef.current, name);\n        unset(shallowFieldsStateRef.current, name);\n        memoizedDefaultValues.current = get(data || defaultValuesRef.current, name);\n        if (!isUnMount.current) {\n          setFields(mapIds(memoizedDefaultValues.current, keyName));\n        }\n      };\n    }\n    return () => {\n      isUnMount.current = true;\n      shouldUnregister && remove();\n      resetFields();\n      delete resetFunctions[name];\n      unset(fieldArrayValuesRef.current, name);\n      fieldArrayNames.delete(name);\n    };\n  }, []);\n  return {\n    swap: useCallback(swap, [name]),\n    move: useCallback(move, [name]),\n    prepend: useCallback(prepend$1, [name]),\n    append: useCallback(append, [name]),\n    remove: useCallback(remove, [name]),\n    insert: useCallback(insert$1, [name]),\n    fields: compact(fields)\n  };\n};\nvar getInputValue = event => isPrimitive(event) || !isObject(event.target) || isObject(event.target) && !event.type ? event : isUndefined(event.target.value) ? event.target.checked : event.target.value;\nfunction useController(_ref14) {\n  let {\n    name,\n    rules,\n    defaultValue,\n    control,\n    onFocus\n  } = _ref14;\n  const methods = useFormContext();\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 Controller is missing `control` prop. https://react-hook-form.com/api#Controller');\n    }\n  }\n  const {\n    defaultValuesRef,\n    setValue,\n    register,\n    unregister,\n    trigger,\n    mode,\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange\n    },\n    formState,\n    formStateRef: {\n      current: {\n        isSubmitted,\n        touched,\n        errors\n      }\n    },\n    updateFormState,\n    readFormStateRef,\n    fieldsRef,\n    fieldArrayNamesRef,\n    shallowFieldsStateRef\n  } = control || methods.control;\n  const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\n  const getInitialValue = () => !isUndefined(get(shallowFieldsStateRef.current, name)) && isNotFieldArray ? get(shallowFieldsStateRef.current, name) : isUndefined(defaultValue) ? get(defaultValuesRef.current, name) : defaultValue;\n  const [value, setInputStateValue] = useState(getInitialValue());\n  const valueRef = useRef(value);\n  const ref = useRef({\n    focus: () => null\n  });\n  const onFocusRef = useRef(onFocus || (() => {\n    if (isFunction(ref.current.focus)) {\n      ref.current.focus();\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!isFunction(ref.current.focus)) {\n        console.warn(\"\\uD83D\\uDCCB 'ref' from Controller render prop must be attached to a React component or a DOM Element whose ref provides a 'focus()' method\");\n      }\n    }\n  }));\n  const shouldValidate = useCallback(isBlurEvent => !skipValidation(Object.assign({\n    isBlurEvent,\n    isReValidateOnBlur,\n    isReValidateOnChange,\n    isSubmitted,\n    isTouched: !!get(touched, name)\n  }, mode)), [isReValidateOnBlur, isReValidateOnChange, isSubmitted, touched, name, mode]);\n  const commonTask = useCallback(_ref15 => {\n    let [event] = _ref15;\n    const data = getInputValue(event);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  }, []);\n  const registerField = useCallback(shouldUpdateValue => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        return console.warn('📋 Field is missing `name` prop. https://react-hook-form.com/api#Controller');\n      }\n    }\n    if (fieldsRef.current[name]) {\n      fieldsRef.current[name] = Object.assign({\n        ref: fieldsRef.current[name].ref\n      }, rules);\n    } else {\n      register(Object.defineProperties({\n        name,\n        focus: onFocusRef.current\n      }, {\n        value: {\n          set(data) {\n            setInputStateValue(data);\n            valueRef.current = data;\n          },\n          get() {\n            return valueRef.current;\n          }\n        }\n      }), rules);\n      shouldUpdateValue = isUndefined(get(defaultValuesRef.current, name));\n    }\n    shouldUpdateValue && isNotFieldArray && setInputStateValue(getInitialValue());\n  }, [rules, name, register]);\n  useEffect(() => () => unregister(name), [name]);\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isUndefined(value)) {\n        console.warn(\"\\uD83D\\uDCCB \".concat(name, \" is missing in the 'defaultValue' prop of either its Controller (https://react-hook-form.com/api#Controller) or useForm (https://react-hook-form.com/api#useForm)\"));\n      }\n      if (!isNotFieldArray && isUndefined(defaultValue)) {\n        console.warn('📋 Controller is missing `defaultValue` prop when using `useFieldArray`. https://react-hook-form.com/api#Controller');\n      }\n    }\n    registerField();\n  }, [registerField]);\n  useEffect(() => {\n    !fieldsRef.current[name] && registerField(true);\n  });\n  const onBlur = useCallback(() => {\n    if (readFormStateRef.current.touched && !get(touched, name)) {\n      set(touched, name, true);\n      updateFormState({\n        touched\n      });\n    }\n    shouldValidate(true) && trigger(name);\n  }, [name, updateFormState, shouldValidate, trigger, readFormStateRef]);\n  const onChange = useCallback(function () {\n    for (var _len = arguments.length, event = new Array(_len), _key = 0; _key < _len; _key++) {\n      event[_key] = arguments[_key];\n    }\n    return setValue(name, commonTask(event), {\n      shouldValidate: shouldValidate(),\n      shouldDirty: true\n    });\n  }, [setValue, name, shouldValidate]);\n  return {\n    field: {\n      onChange,\n      onBlur,\n      name,\n      value,\n      ref\n    },\n    meta: Object.defineProperties({\n      invalid: !!get(errors, name)\n    }, {\n      isDirty: {\n        get() {\n          return !!get(formState.dirtyFields, name);\n        }\n      },\n      isTouched: {\n        get() {\n          return !!get(formState.touched, name);\n        }\n      }\n    })\n  };\n}\nfunction useWatch(_ref16) {\n  let {\n    control,\n    name,\n    defaultValue\n  } = _ref16;\n  const methods = useFormContext();\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 useWatch is missing `control` prop. https://react-hook-form.com/api#useWatch');\n    }\n  }\n  const {\n    useWatchFieldsRef,\n    useWatchRenderFunctionsRef,\n    watchInternal,\n    defaultValuesRef\n  } = control || methods.control;\n  const updateValue = useState()[1];\n  const idRef = useRef();\n  const defaultValueRef = useRef(defaultValue);\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (name === '') {\n        console.warn('📋 useWatch is missing `name` attribute. https://react-hook-form.com/api#useWatch');\n      }\n    }\n    const id = idRef.current = generateId();\n    const watchFieldsHookRender = useWatchRenderFunctionsRef.current;\n    const watchFieldsHook = useWatchFieldsRef.current;\n    watchFieldsHook[id] = new Set();\n    watchFieldsHookRender[id] = () => updateValue({});\n    watchInternal(name, defaultValueRef.current, id);\n    return () => {\n      delete watchFieldsHook[id];\n      delete watchFieldsHookRender[id];\n    };\n  }, [name, useWatchRenderFunctionsRef, useWatchFieldsRef, watchInternal, defaultValueRef]);\n  return idRef.current ? watchInternal(name, defaultValueRef.current, idRef.current) : isUndefined(defaultValue) ? isString(name) ? get(defaultValuesRef.current, name) : Array.isArray(name) ? name.reduce((previous, inputName) => Object.assign(Object.assign({}, previous), {\n    [inputName]: get(defaultValuesRef.current, inputName)\n  }), {}) : defaultValuesRef.current : defaultValue;\n}\nconst Controller = props => {\n  const {\n      rules,\n      as,\n      render,\n      defaultValue,\n      control,\n      onFocus\n    } = props,\n    rest = __rest(props, [\"rules\", \"as\", \"render\", \"defaultValue\", \"control\", \"onFocus\"]);\n  const {\n    field,\n    meta\n  } = useController(props);\n  const componentProps = Object.assign(Object.assign({}, rest), field);\n  return as ? isValidElement(as) ? cloneElement(as, componentProps) : createElement(as, componentProps) : render ? render(field, meta) : null;\n};\nexport { Controller, FormProvider, appendErrors, get, transformToNestObject, useController, useFieldArray, useForm, useFormContext, useWatch };","import { Link } from 'gatsby';\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport './MauticForm.scss';\r\n\r\ninterface MauticFormProps {\r\n    formId: string;\r\n    formName: string;\r\n    isDark: boolean;\r\n    buttonText?: string;\r\n}\r\n\r\ninterface MauticFormData {\r\n    mauticform: Record<string, string>;\r\n}\r\n\r\nconst buildFormData = (data: MauticFormData) => {\r\n    const formData = new FormData();\r\n\r\n    for (const key in data['mauticform']) {\r\n        const newKey = `mauticform[${key}]`;\r\n        formData.append(newKey, data['mauticform'][key]);\r\n    }\r\n    formData.append('mauticform[messenger]', '1');\r\n    return formData;\r\n};\r\n\r\nconst FORM_ACTION_URL = 'https://mautic.theaisummer.com/form/submit?formId=';\r\n\r\nconst MauticForm: React.FC<MauticFormProps> = ({\r\n    formId,\r\n    formName,\r\n    isDark,\r\n    buttonText\r\n}: MauticFormProps) => {\r\n    const [isSuccessfullySubmitted, setIsSuccessfullySubmitted] = useState(\r\n        false\r\n    );\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = (data: MauticFormData) => {\r\n        if (data.mauticform.honey != '') {\r\n            return;\r\n        } else {\r\n            delete data.mauticform.honey;\r\n        }\r\n\r\n        const formData = buildFormData(data);\r\n\r\n        try {\r\n            fetch(`${FORM_ACTION_URL}${formId}`, {\r\n                method: 'post',\r\n                mode: 'no-cors',\r\n                cache: 'no-cache',\r\n                body: formData\r\n            });\r\n            setIsSuccessfullySubmitted(true);\r\n        } catch (error) {\r\n            // handle server errors\r\n            console.log('Request failed', error);\r\n        }\r\n    };\r\n\r\n    return isSuccessfullySubmitted ? (\r\n        <div className=\"mauticform-success\">\r\n            <p>Thank you for joining AI Summer</p>\r\n        </div>\r\n    ) : (\r\n        <div\r\n            id={`mauticform_wrapper__${formName}`}\r\n            className=\"mauticform-wrapper\"\r\n        >\r\n            <form\r\n                autoComplete=\"false\"\r\n                role=\"form\"\r\n                method=\"POST\"\r\n                onSubmit={handleSubmit(onSubmit)}\r\n                id={`mauticform_${formName}`}\r\n                data-mautic-form={`${formName}`}\r\n            >\r\n                <div className=\"mauticform-innerform\">\r\n                    <div\r\n                        className=\"mauticform-page-wrapper\"\r\n                        data-mautic-form-page=\"1\"\r\n                    >\r\n                        <div className=\"mauticform-honey\">\r\n                            <input\r\n                                name=\"mauticform[honey]\"\r\n                                className=\"mauticform-honey--input\"\r\n                                type=\"text\"\r\n                                tabIndex={-1}\r\n                                autoComplete=\"false\"\r\n                                ref={register}\r\n                            ></input>\r\n                        </div>\r\n                        <div\r\n                            id={`mauticform_${formName}_email`}\r\n                            data-validate=\"email\"\r\n                            data-validation-type=\"email\"\r\n                            className=\"mauticform-email\"\r\n                        >\r\n                            <input\r\n                                id={`mauticform_input_${formName}_email`}\r\n                                name=\"mauticform[email]\"\r\n                                className=\"mauticform-email--input\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter your email here...\"\r\n                                ref={register({\r\n                                    required: 'Email is required',\r\n                                    pattern: {\r\n                                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                        message: 'Enter a valid e-mail address'\r\n                                    }\r\n                                })}\r\n                            />\r\n                        </div>\r\n\r\n                        <div\r\n                            id={`mauticform_${formName}_join_ai_summer`}\r\n                            className=\"mauticform-button-wrapper\"\r\n                        >\r\n                            <button\r\n                                type=\"submit\"\r\n                                name=\"mauticform[join_ai_summer]\"\r\n                                id={`mauticform_input_${formName}_join_ai_summer`}\r\n                                value=\"\"\r\n                                className=\"mauticform-button\"\r\n                            >\r\n                                {buttonText || 'Subscribe'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    {errors.mauticform && errors.mauticform.email && (\r\n                        <span className=\"mauticform-errormsg\">\r\n                            {errors.mauticform.email.message}\r\n                        </span>\r\n                    )}\r\n                    <div\r\n                        className=\"mauticform-error\"\r\n                        id={`mauticform_${formName}_error`}\r\n                    ></div>\r\n                    <div\r\n                        className=\"mauticform-message\"\r\n                        id={`mauticform_${formName}_message`}\r\n                    ></div>\r\n                </div>\r\n\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"mauticform[formId]\"\r\n                    id={`mauticform_${formName}_id`}\r\n                    value={formId}\r\n                    ref={register}\r\n                />\r\n                {/* TODO: make value the proper url( current page) */}\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"mauticform[return]\"\r\n                    id={`mauticform_${formName}_return`}\r\n                    value=\"https://theaisummer.com\"\r\n                    ref={register}\r\n                />\r\n                <input\r\n                    type=\"hidden\"\r\n                    name=\"mauticform[formName]\"\r\n                    id={`mauticform_${formName}_name`}\r\n                    value={formName}\r\n                    ref={register}\r\n                />\r\n            </form>\r\n            <div className={`form-privacy-text--${isDark ? 'light' : 'dark'}`}>\r\n                <p>\r\n                    * We're committed to your privacy. AI Summer uses the\r\n                    information you provide to send you our newsletter\r\n                    and contact you about our products. You may unsubscribe from\r\n                    these communications at any time. For more information,\r\n                    check out our{' '}\r\n                    <Link to=\"/privacy_policy/\">Privacy Policy</Link>.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MauticForm;\r\n","import React, { Fragment, useState } from 'react';\nimport { Accent, ButtonType } from '../../../../globals';\nimport Group from '../../../layout/Group/Group';\nimport Button from '../../Button/Button';\nimport PostCard from '../../Cards/PostCard/PostCard';\nimport './MoreArticles.scss';\n\ninterface MoreArticlesProps {\n    posts: Frontmatter[];\n}\n\nconst MoreArticles: React.FC<MoreArticlesProps> = (\n    props: MoreArticlesProps\n) => {\n    const limit = 3;\n    const length = props.posts.length;\n    const [showMore, setShowMore] = useState(true);\n    const [list, setList] = useState(props.posts.slice(0, 9));\n    const [index, setIndex] = useState(9);\n\n    const loadMore = () => {\n        const newIndex = index + limit;\n        const newShowMore = newIndex < length - 1;\n        const newList = list.concat(props.posts.slice(index, newIndex));\n        setIndex(newIndex);\n        setList(newList);\n        setShowMore(newShowMore);\n    };\n\n    const groupSize = 3;\n    const groupsNum = Math.ceil(list.length / groupSize);\n\n    const renderGroup = (\n        groupIndex: number,\n        postsList: Frontmatter[],\n        groupSize: number\n    ) => {\n        const renderedItems = [];\n\n        for (let j = 0; j < groupSize; j++) {\n            const post = postsList[groupIndex * groupSize + j];\n\n            post\n                ? renderedItems.push(<PostCard key={post.suburl} post={post} />)\n                : renderedItems.push('');\n        }\n        return renderedItems;\n    };\n\n    return (\n        <Fragment>\n            {[...Array(groupsNum).keys()].map((groupIndex) => (\n                <Group key={groupIndex} size={groupSize}>\n                    {renderGroup(groupIndex, list, groupSize)}\n                </Group>\n            ))}\n\n            {showMore && (\n                <Button\n                    accent={Accent.secondary}\n                    type={ButtonType.custom}\n                    onClickFunction={() => loadMore()}\n                    className=\"load-more-btn\"\n                >\n                    <span>Load More</span>\n                </Button>\n            )}\n        </Fragment>\n    );\n};\n\nexport default MoreArticles;\n","import React from 'react';\nimport Group from '../../../layout/Group/Group';\nimport PostCard from '../../Cards/PostCard/PostCard';\nimport Tab from '../../Tabs/Tab';\nimport Tabs from '../../Tabs/Tabs';\nimport './PostsPerTopic.scss';\n\ninterface PostsPerTopicProps {\n    posts: Record<string, Frontmatter>;\n    postsPerTopic: PostsPerTopicBlock[];\n}\n\nconst PostsPerTopic: React.FC<PostsPerTopicProps> = (\n    props: PostsPerTopicProps\n) => {\n    return (\n        <Tabs\n            size={props.postsPerTopic.length}\n            className=\"posts-per-topic__tabs\"\n        >\n            {props.postsPerTopic.map((postsPerTopicBlock) => {\n                return (\n                    <Tab\n                        key={postsPerTopicBlock.topic}\n                        label={postsPerTopicBlock.topic}\n                    >\n                        <Group size={postsPerTopicBlock.posts.length}>\n                            {postsPerTopicBlock.posts.map((p) => {\n                                return (\n                                    <PostCard\n                                        key={p}\n                                        post={props.posts[p] || ''}\n                                        className=\"posts-per-topic__tabs__card\"\n                                    />\n                                );\n                            })}\n                        </Group>\n                    </Tab>\n                );\n            })}\n        </Tabs>\n    );\n};\n\nexport default PostsPerTopic;\n","import React, { Fragment } from 'react';\nimport { Direction } from '../../../../globals';\nimport Group from '../../../layout/Group/Group';\nimport Card from '../../Cards/Card';\nimport './Topics.scss';\n\ninterface TopicsProps {\n    topics: TopicDetails[];\n}\n\nconst renderGroup = (\n    groupIndex: number,\n    topics: TopicDetails[],\n    groupSize: number\n) => {\n    const renderedItems = [];\n\n    for (let j = 0; j < groupSize; j++) {\n        const topic = topics[groupIndex * groupSize + j];\n        renderedItems.push(\n            <Card\n                key={topic.title}\n                direction={Direction.vertical}\n                onClickLink={`topics/${topic.url}`}\n                className=\"topic-card-light\"\n                aos=\"zoom-in\"\n            >\n                <span\n                    dangerouslySetInnerHTML={{\n                        __html: topic.logo || ''\n                    }}\n                    className=\"topic-card-light__logo\"\n                ></span>\n                <h4 className=\"topic-card-light__title\">{topic.title}</h4>\n                <p className=\"topic-card-light__desc\">{topic.desc}</p>\n            </Card>\n        );\n    }\n    return renderedItems;\n};\n\nconst Topics: React.FC<TopicsProps> = (props: TopicsProps) => {\n    const groupSize = 3;\n    const groupsNum = Math.floor(props.topics.length / groupSize);\n\n    return (\n        <Fragment>\n            {[...Array(groupsNum).keys()].map((groupIndex) => (\n                <Group key={groupIndex} size={groupSize}>\n                    {renderGroup(groupIndex, props.topics, groupSize)}\n                </Group>\n            ))}\n        </Fragment>\n    );\n};\n\nexport default Topics;\n","export class PostsSelector {\n    allPosts: Record<string, Frontmatter>;\n\n    constructor(allPostsUrls: PostDetails[]) {\n        this.allPosts = this.buildPostsMap(allPostsUrls);\n    }\n\n    get(): Record<string, Frontmatter> {\n        return this.allPosts;\n    }\n\n    getByTopic(\n        postsUrlsPerTopic: PostsPerTopicBlock[]\n    ): {\n        posts: Record<string, Frontmatter>;\n        postsPerTopic: PostsPerTopicBlock[];\n    } {\n        const postsUrlsPerTopicFlattened = postsUrlsPerTopic.reduce(\n            (acc: string[], x) => acc.concat(x.posts),\n            []\n        );\n\n        return {\n            posts: Object.keys(this.allPosts)\n                .filter((post) => postsUrlsPerTopicFlattened.includes(post))\n                .reduce((obj, key) => {\n                    return {\n                        ...obj,\n                        [key]: this.allPosts[key]\n                    };\n                }, {}),\n            postsPerTopic: postsUrlsPerTopic\n        };\n    }\n\n    getByCategory(\n        postsUrlsPerCategory: PostsPerCategory[]\n    ): {\n        posts: Record<string, Frontmatter>;\n        postsPerCategory: PostsPerCategory[];\n    } {\n        const postsUrlsPerCategoryFlattened = postsUrlsPerCategory.reduce(\n            (acc: string[], x) => acc.concat(x.posts),\n            []\n        );\n\n        return {\n            posts: Object.keys(this.allPosts)\n                .filter((post) => postsUrlsPerCategoryFlattened.includes(post))\n                .reduce((obj, key) => {\n                    return {\n                        ...obj,\n                        [key]: this.allPosts[key]\n                    };\n                }, {}),\n            postsPerCategory: postsUrlsPerCategory\n        };\n    }\n\n    sortByDate() {\n        // TODO:\n        return this.allPosts;\n    }\n\n    filter(postsToFilter: string[]): Record<string, Frontmatter> {\n        return Object.keys(this.allPosts)\n            .filter((post) => postsToFilter.includes(post))\n            .reduce((obj, key) => {\n                return {\n                    ...obj,\n                    [key]: this.allPosts[key]\n                };\n            }, {});\n    }\n\n    private buildPostsMap(allPosts: { frontmatter: Frontmatter }[]) {\n        const postsMap: Record<string, Frontmatter> = {};\n\n        allPosts.forEach((p) => {\n            postsMap[p.frontmatter.suburl] = p.frontmatter;\n        });\n        // console.log('building postsMap');\n\n        return postsMap;\n    }\n}\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport Container from '../components/layout/Container/Container';\nimport Group from '../components/layout/Group/Group';\nimport PageLayout from '../components/layout/PageLayout/PageLayout';\nimport PageSection from '../components/layout/PageSection/PageSection';\nimport AnnouncementHeader from '../components/ui/AnnouncementHeader/AnnouncementHeader';\nimport Block from '../components/ui/Cards/Block';\nimport Divider from '../components/ui/Divider/Divider';\nimport HomeBanner from '../components/ui/Home/HomeBanner/HomeBanner';\nimport MauticForm from '../components/ui/Forms/MauticForm/MauticForm';\nimport MoreArticles from '../components/ui/Home/MoreArticles/MoreArticles';\nimport PostsPerTopic from '../components/ui/Home/PostsPerTopic/PostsPerTopic';\nimport Topics from '../components/ui/Home/Topics/Topics';\nimport { PostsSelector } from '../components/utils/PostsSelector';\nimport Seo from '../components/utils/Seo';\nimport { useAnimationOnScroll } from '../components/utils/useAnimateOnScroll';\nimport { Direction } from '../globals';\nimport './index.scss';\n\ninterface HomeProps {\n    data: {\n        homeYaml: {\n            about_section: AboutSectionBlock[];\n            tabs_posts: PostsPerTopicBlock[];\n        };\n        allMdx: {\n            nodes: PostDetails[];\n        };\n        topicsYaml: {\n            topics: TopicDetails[];\n        };\n    };\n}\n\nconst Home: React.FC<HomeProps> = ({ data }: HomeProps) => {\n    const postsSelector = new PostsSelector(data.allMdx.nodes);\n    useAnimationOnScroll();\n    return (\n        <PageLayout>\n            <Seo isPost={false} />\n            <AnnouncementHeader />\n            <HomeBanner horizontalCarouselTopics={data.topicsYaml.topics} />\n            <PageSection className=\"what-is-section\">\n                <Container>\n                    <div className=\"section-text\">\n                        <h2>APUS Venture</h2>\n                        <p>\n                            Consectetur adipiscing elit, sed do eiusmod tempor\n                            incididunt ut labore et dolore magna aliqua. Rutrum\n                            quisque non tellus orci ac. Arcu risus quis varius\n                            quam quisque id diam vel quam. Porta non pulvinar\n                            neque laoreet suspendisse interdum consectetur\n                            libero id. Urna molestie at elementum eu facilisis\n                            sed odio morbi quis. Orci nulla pellentesque\n                            dignissim enim sit amet.\n                        </p>\n                        <p>\n                            Dui id ornare arcu odio ut sem. Semper viverra nam\n                            libero justo laoreet sit amet cursus. Nec feugiat in\n                            fermentum posuere urna nec tincidunt. Adipiscing\n                            elit ut aliquam purus sit amet luctus venenatis\n                        </p>\n                        <p>\n                            Consectetur adipiscing elit ut aliquam purus sit.\n                            Tempor commodo ullamcorper a lacus vestibulum.\n                            Mauris nunc congue nisi vitae suscipit\n                        </p>\n                    </div>\n\n                    <Group size={2}>\n                        {data.homeYaml.about_section\n                            .slice(0, 2)\n                            .map((block, index) => {\n                                return (\n                                    <Block\n                                        key={index}\n                                        direction={Direction.vertical}\n                                        aos=\"zoom-in\"\n                                    >\n                                        <span\n                                            dangerouslySetInnerHTML={{\n                                                __html: block.icon\n                                            }}\n                                        ></span>\n                                        <h3>{block.title}</h3>\n                                        <div\n                                            dangerouslySetInnerHTML={{\n                                                __html: block.desc\n                                            }}\n                                        ></div>\n                                    </Block>\n                                );\n                            })}\n                    </Group>\n                    <Group size={2}>\n                        {data.homeYaml.about_section\n                            .slice(2, 4)\n                            .map((block, index) => {\n                                return (\n                                    <Block\n                                        key={index}\n                                        direction={Direction.vertical}\n                                        aos=\"zoom-in\"\n                                    >\n                                        <span\n                                            dangerouslySetInnerHTML={{\n                                                __html: block.icon\n                                            }}\n                                        ></span>\n                                        <h3>{block.title}</h3>\n                                        <div\n                                            dangerouslySetInnerHTML={{\n                                                __html: block.desc\n                                            }}\n                                        ></div>\n                                    </Block>\n                                );\n                            })}\n                    </Group>\n                </Container>\n            </PageSection>\n            <PageSection className=\"posts-per-topic-section\">\n                <Container>\n                    <div className=\"section-text\">\n                        <h2>Explore our content</h2>\n                        <p>\n                            Eget mauris pharetra et ultrices neque ornare aenean\n                            euismod. Nunc mi ipsum faucibus vitae aliquet nec\n                            ullamcorper sit. Eu lobortis elementum nibh tellus\n                            molestie nunc non blandit massa. Massa tempor nec\n                            feugiat nisl pretium\n                        </p>\n                    </div>\n\n                    <PostsPerTopic\n                        {...postsSelector.getByTopic(data.homeYaml.tabs_posts)}\n                    />\n                </Container>\n            </PageSection>\n            <PageSection className=\"topics-section\">\n                <Container>\n                    <div className=\"section-text\">\n                        <h2>Topics</h2>\n                        <p>\n                            Get lorem dolor sed viverra. Id faucibus nisl\n                            tincidunt eget nullam non nisi est sit. Aliquam\n                            vestibulum morbi blandit cursus risus at ultrices.\n                        </p>\n                        <p>\n                            Vel turpis nunc eget lorem. Scelerisque fermentum\n                            dui faucibus in ornare quam viverra orci.\n                        </p>\n                    </div>\n                    <Topics topics={data.topicsYaml.topics} />\n                </Container>\n            </PageSection>\n\n            <PageSection className=\"newsletter-section\">\n                <Container>\n                    <div className=\"section-text section-text--light\">\n                        <h2>Join the APUS Venture community</h2>\n                        <h3>\n                            Subscribe to our newsletter and get access to all of\n                            our free content and resources into your inbox\n                        </h3>\n                    </div>\n                    <MauticForm\n                        formId=\"1\"\n                        formName=\"registrationfrompost\"\n                        isDark={true}\n                    />\n                </Container>\n            </PageSection>\n\n            <Divider direction={Direction.horizontal} />\n            <PageSection className=\"more-articles-section\">\n                <Container>\n                    <div className=\"section-text\">\n                        <h2>More articles</h2>\n                    </div>\n                    <MoreArticles\n                        posts={data.allMdx.nodes.map(\n                            (node) => node.frontmatter\n                        )}\n                    />\n                </Container>\n            </PageSection>\n        </PageLayout>\n    );\n};\n\nexport const homeQuery = graphql`\n    {\n        homeYaml {\n            tabs_posts {\n                posts\n                topic\n            }\n            about_section {\n                desc\n                icon\n                title\n            }\n        }\n        allMdx(\n            filter: { frontmatter: { layout: { eq: \"BlogPage\" } } }\n            sort: { fields: frontmatter___publishedAt, order: DESC }\n        ) {\n            nodes {\n                frontmatter {\n                    author\n                    description\n                    image {\n                        childImageSharp {\n                            fluid {\n                                ...GatsbyImageSharpFluid\n                            }\n                        }\n                    }\n                    layout\n                    suburl\n                    tags\n                    title\n                }\n            }\n        }\n        topicsYaml {\n            topics {\n                desc\n                title\n                url\n                logo\n            }\n        }\n    }\n`;\n\nexport default Home;\n","import React from 'react';\nimport { Accent, ButtonType } from '../../../globals';\nimport Button from '../Button/Button';\nimport './AnnouncementHeader.scss';\n\ninterface AnnouncementHeaderProps {\n    className?: string;\n    children?: React.ReactNode;\n}\n\n//hardcoded it to avoid copy pasting everywhere\nconst AnnouncementHeader: React.FC<AnnouncementHeaderProps> = (\n    props: AnnouncementHeaderProps\n) => {\n    return (\n        <div className={props.className || 'announcement-header'}>\n            <div className=\"announcement-header__content\">\n                <p>You can read any blogs in this website. Thank you.</p>\n                <Button\n                    accent={Accent.primary}\n                    type={ButtonType.linkExternal}\n                    onClickLink=\"\"\n                    className=\"announcement-header__content__button\"\n                >\n                    More\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default AnnouncementHeader;\n","import React from 'react';\n\ninterface TabProps {\n    label: string;\n    children: React.ReactNode;\n    className?: string;\n}\n\nconst Tab: React.FC<TabProps> = (props: TabProps) => {\n    return <div className={props.className}>{props.children}</div>;\n};\n\nexport default Tab;\n"],"sourceRoot":""}